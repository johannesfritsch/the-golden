/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type ProvisionValueType = "absolute" | "percent";

export type Timestamp = ColumnType<Date, Date | string>;

export type WaitlistAgeGroup = "18-25" | "26-35" | "36-45" | "46-55" | "56-65" | "66-75" | "76-85" | "86-95" | "other";

export type WaitlistGender = "f" | "m" | "o";

export interface DeviceCheckins {
  androidId: string | null;
  buildNumber: string;
  buildType: string;
  buildVersion: string;
  createdAt: Generated<Timestamp>;
  deviceId: string;
  deviceToken: string | null;
  deviceType: string;
  deviceUniqueId: string;
  hash: string;
  instanceId: string | null;
  isTablet: boolean;
  manufacturer: string;
  systemName: string;
  systemVersion: string;
  updatedAt: Generated<Timestamp>;
}

export interface Devices {
  createdAt: Generated<Timestamp>;
  uniqueId: string;
  updatedAt: Generated<Timestamp>;
}

export interface LoginPieces {
  applicationKey: string;
  applicationKeySlot: number;
  cardUid: string;
  createdAt: Generated<Timestamp>;
  masterKey: string;
  pin: string;
  updatedAt: Generated<Timestamp>;
}

export interface LoginSessions {
  cardUid: string;
  createdAt: Generated<Timestamp>;
  randA: string;
}

export interface ReferralCodes {
  autoExtend: Generated<boolean>;
  code: string;
  eventDiscount: Generated<number>;
  eventDiscountDescription: string | null;
  eventDiscountName: string | null;
  extensionPeriodLength: Generated<number>;
  extensionPrice: Generated<number>;
  id: Generated<string>;
  initialPeriodLength: Generated<number>;
  initialPrice: Generated<number>;
  referrerId: string | null;
  waitlistMemberId: string | null;
}

export interface ReferrerAddresses {
  city: string;
  countryISO: string;
  id: Generated<string>;
  nameLine1: string;
  nameLine2: string | null;
  referrerId: string;
  street: string;
  zip: string;
}

export interface ReferrerBankDetails {
  bankName: string;
  bic: string;
  iban: string;
  id: Generated<string>;
  referrerId: string;
}

export interface ReferrerContacts {
  email: string;
  id: Generated<string>;
  name: string;
  phone: string;
  referrerId: string;
}

export interface Referrers {
  extensionProvision: number;
  extensionProvisionType: ProvisionValueType;
  id: Generated<string>;
  initialProvision: number;
  initialProvisionType: ProvisionValueType;
  maxProvisionDuration: number;
  name: string;
}

export interface WaitlistMembers {
  ageGroup: WaitlistAgeGroup;
  countryISO: string;
  createdAt: Generated<Timestamp>;
  deviceUniqueId: string;
  gender: WaitlistGender;
  pushToken: string;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  device_checkins: DeviceCheckins;
  devices: Devices;
  login_pieces: LoginPieces;
  login_sessions: LoginSessions;
  referral_codes: ReferralCodes;
  referrer_addresses: ReferrerAddresses;
  referrer_bank_details: ReferrerBankDetails;
  referrer_contacts: ReferrerContacts;
  referrers: Referrers;
  waitlist_members: WaitlistMembers;
}
